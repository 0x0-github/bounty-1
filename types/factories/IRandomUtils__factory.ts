/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IRandomUtils, IRandomUtilsInterface } from "../IRandomUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "seed",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
    ],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "random",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomKind",
    outputs: [
      {
        internalType: "enum IRandomUtils.RandomKind",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomness",
    outputs: [
      {
        internalType: "bytes32",
        name: "seed",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IRandomUtils__factory {
  static readonly abi = _abi;
  static createInterface(): IRandomUtilsInterface {
    return new utils.Interface(_abi) as IRandomUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRandomUtils {
    return new Contract(address, _abi, signerOrProvider) as IRandomUtils;
  }
}
