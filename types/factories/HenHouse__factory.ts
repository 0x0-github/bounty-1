/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HenHouse, HenHouseInterface } from "../HenHouse";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fh",
        type: "address",
      },
      {
        internalType: "address",
        name: "_eggs",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_randomUtils",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "fox",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hen",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Heist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ETHPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "allStakingsOfOwner",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct HenHouse.CurrentValue[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "foxIds",
        type: "uint256[]",
      },
    ],
    name: "batchFoxInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dailyCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "foxValue",
            type: "uint256",
          },
        ],
        internalType: "struct HenHouse.Fox[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unstake",
        type: "bool",
      },
    ],
    name: "claimHenRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "claimingFoxes",
        type: "uint256[]",
      },
    ],
    name: "claimManyFoxesRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "hens",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "unstake",
        type: "bool",
      },
    ],
    name: "claimManyHenRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "daysStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eggsHeistedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foxCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foxValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "foxes",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dailyCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "foxValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "fulfillRandomnessFromOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "enterHenHouse",
        type: "bool",
      },
    ],
    name: "heist",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "heistAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "heistCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "heistPercentage",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "heistPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "henIds",
        type: "uint256[]",
      },
    ],
    name: "multiStakeHen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomUtils",
    outputs: [
      {
        internalType: "contract IRandomUtils",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setHeistPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomUtils",
        type: "address",
      },
    ],
    name: "setRandomUtils",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "stakeHen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakings",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "stolen",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakingsByOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxFreeDays",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxPercentage",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "togglePause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTaxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unstakeHen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610120604052631dcd65006080908152633b9aca0060a052637735940060c05263ee6b280060e0526401dcd65000610100526200004190600690600562000147565b506011805465ffffffffffff19166403001e000f1790553480156200006557600080fd5b50604051620031fb380380620031fb8339810160408190526200008891620001d4565b6200009333620000f7565b600180546001600160a01b03199081166001600160a01b039788161790915560028054821695871695909517909455600380548516928616929092179091556004805484169285169290921790915560058054909216921691909117905562000243565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200018e579160200282015b828111156200018e578251829064ffffffffff1690559160200191906001019062000168565b506200019c929150620001a0565b5090565b5b808211156200019c5760008155600101620001a1565b80516001600160a01b0381168114620001cf57600080fd5b919050565b600080600080600060a08688031215620001ec578081fd5b620001f786620001b7565b94506200020760208701620001b7565b93506200021760408701620001b7565b92506200022760608701620001b7565b91506200023760808701620001b7565b90509295509295909350565b612fa880620002536000396000f3fe60806040526004361061021a5760003560e01c80637d9dfe9411610123578063ae7b6d16116100ab578063d7384d831161006f578063d7384d83146106e8578063d7920cb1146106fe578063dfb1e43d1461071e578063ef45795014610734578063f2fde38b1461075457600080fd5b8063ae7b6d1614610606578063c4ae316814610621578063c4f0c1fc14610636578063c5994afb146106a7578063d2d7231f146106c857600080fd5b80638da5cb5b116100f25780638da5cb5b1461055b57806392e4741714610579578063943fb1a414610599578063a67cb62c146105c6578063a77edd5e146105e657600080fd5b80637d9dfe94146104cf5780637decd3d8146104ef5780638a861b24146105055780638b50db251461052557600080fd5b80635c975abb116101a65780637349790b116101755780637349790b14610421578063746a88f91461045957806374e673c0146104795780637acc9e29146104995780637ca1682d146104b957600080fd5b80635c975abb1461039257806363caf953146103c357806370a08231146103d6578063715018a61461040c57600080fd5b80632d03b7f8116101ed5780632d03b7f8146102ee5780632e1a7d4d1461030e5780632f745c591461032e5780633ab952a61461035c5780635420b4b11461037c57600080fd5b80631e0b09591461021f5780632390f25814610241578063253ac986146102615780632748fec814610297575b600080fd5b34801561022b57600080fd5b5061023f61023a366004612c01565b610774565b005b34801561024d57600080fd5b5061023f61025c366004612977565b610822565b34801561026d57600080fd5b5061028161027c366004612a0c565b61087b565b60405161028e9190612cc7565b60405180910390f35b3480156102a357600080fd5b506102d36102b2366004612ad0565b600e6020526000908152604090208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161028e565b3480156102fa57600080fd5b5061023f610309366004612914565b6109bf565b34801561031a57600080fd5b5061023f610329366004612ad0565b610a52565b34801561033a57600080fd5b5061034e61034936600461294c565b610ab9565b60405190815260200161028e565b34801561036857600080fd5b5061034e61037736600461294c565b610b04565b34801561038857600080fd5b5061034e600d5481565b34801561039e57600080fd5b506011546103b390600160301b900460ff1681565b604051901515815260200161028e565b61023f6103d1366004612bd2565b610b35565b3480156103e257600080fd5b5061034e6103f1366004612914565b6001600160a01b031660009081526008602052604090205490565b34801561041857600080fd5b5061023f6113ad565b34801561042d57600080fd5b50600554610441906001600160a01b031681565b6040516001600160a01b03909116815260200161028e565b34801561046557600080fd5b5061034e610474366004612ad0565b6113e3565b34801561048557600080fd5b5061023f610494366004612a0c565b611485565b3480156104a557600080fd5b5061023f6104b4366004612ad0565b6114d9565b3480156104c557600080fd5b5061034e600c5481565b3480156104db57600080fd5b5061023f6104ea3660046129b7565b6117dd565b3480156104fb57600080fd5b5061034e600a5481565b34801561051157600080fd5b5061034e610520366004612ad0565b611958565b34801561053157600080fd5b5060115461054890640100000000900461ffff1681565b60405161ffff909116815260200161028e565b34801561056757600080fd5b506000546001600160a01b0316610441565b34801561058557600080fd5b5061034e610594366004612ad0565b6119c7565b3480156105a557600080fd5b506105b96105b4366004612914565b6119fa565b60405161028e9190612c23565b3480156105d257600080fd5b5061034e6105e1366004612ad0565b611bf6565b3480156105f257600080fd5b5061023f610601366004612bd2565b611c17565b34801561061257600080fd5b506011546105489061ffff1681565b34801561062d57600080fd5b5061023f611cf0565b34801561064257600080fd5b50610680610651366004612ad0565b600760205260009081526040902080546001909101546001600160a01b03811690600160a01b900461ffff1683565b604080519384526001600160a01b03909216602084015261ffff169082015260600161028e565b3480156106b357600080fd5b506011546105489062010000900461ffff1681565b3480156106d457600080fd5b5061034e6106e3366004612ad0565b611d3e565b3480156106f457600080fd5b5061034e60095481565b34801561070a57600080fd5b5061023f610719366004612ad0565b611f87565b34801561072a57600080fd5b5061034e600b5481565b34801561074057600080fd5b5061023f61074f366004612ad0565b612015565b34801561076057600080fd5b5061023f61076f366004612914565b6122c2565b6000546001600160a01b031633146107a75760405162461bcd60e51b815260040161079e90612d78565b60405180910390fd5b60065460ff8316106107ed5760405162461bcd60e51b815260206004820152600f60248201526e092dcc6dee4e4cac6e840d2dcc8caf608b1b604482015260640161079e565b8060068360ff168154811061081257634e487b7160e01b600052603260045260246000fd5b6000918252602090912001555050565b60005b60ff81168211156108765761086483838360ff1681811061085657634e487b7160e01b600052603260045260246000fd5b905060200201356000610b35565b8061086e81612ed9565b915050610825565b505050565b60606000825167ffffffffffffffff8111156108a757634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156108fc57816020015b6108e960405180606001604052806000815260200160008152602001600081525090565b8152602001906001900390816108c55790505b50905060005b83518161ffff1610156109b857600e6000858361ffff168151811061093757634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050828261ffff168151811061099a57634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806109b090612e9c565b915050610902565b5092915050565b6000546001600160a01b031633146109e95760405162461bcd60e51b815260040161079e90612d78565b6001600160a01b038116610a305760405162461bcd60e51b815260206004820152600e60248201526d43616e6e6f74206265207a65726f60901b604482015260640161079e565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a7c5760405162461bcd60e51b815260040161079e90612d78565b600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610ab5573d6000803e3d6000fd5b5050565b6001600160a01b0382166000908152600860205260408120805483908110610af157634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60086020528160005260406000208181548110610b2057600080fd5b90600052602060002001600091509150505481565b333214610b6f5760405162461bcd60e51b81526020600482015260086024820152674f6e6c7920454f4160c01b604482015260640161079e565b601154600160301b900460ff1615610b995760405162461bcd60e51b815260040161079e90612d4f565b6001546040516331a9108f60e11b81526004810184905233916001600160a01b031690636352211e9060240160206040518083038186803b158015610bdd57600080fd5b505afa158015610bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c159190612930565b6001600160a01b0316148015610ca2575060015460405163b82f74e160e01b8152600481018490526001600160a01b039091169063b82f74e19060240160206040518083038186803b158015610c6a57600080fd5b505afa158015610c7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca29190612ab4565b610ce65760405162461bcd60e51b81526020600482015260156024820152740b2deea40daeae6e840deeedc40e8d0c2e840ccdef605b1b604482015260640161079e565b6000828152600e602052604090208054610d1b574281556009546002820155600a8054906000610d1583612ebe565b91905055505b81156112dc57600654600182015410610d895760405162461bcd60e51b815260206004820152602a60248201527f596f752063616e2068656973742061206d6178696d756d206f6620352074696d6044820152696573207065722064617960b01b606482015260840161079e565b6000610d9484611958565b90506000610da1826113e3565b90503415610e0d5780341015610e085760405162461bcd60e51b815260206004820152602660248201527f596f75206d757374207061792074686520636f727265637420616d6f756e74206044820152650decc408aa8960d31b606482015260840161079e565b61100c565b600354604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e9060440160206040518083038186803b158015610e5757600080fd5b505afa158015610e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8f9190612b2a565b6003546040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610ed857600080fd5b505afa158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f109190612b2a565b9050828210158015610f225750828110155b610f7e5760405162461bcd60e51b815260206004820152602760248201527f596f75206d757374207061792074686520636f727265637420616d6f756e74206044820152660decc40ae8aa8960cb1b606482015260840161079e565b6003546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610fd057600080fd5b505af1158015610fe4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110089190612ab4565b5050505b825460009061101b9042612e59565b9050620151808111156110365742845560018085015561104e565b60018401805490600061104883612ebe565b91905055505b600c805490600061105e83612ebe565b90915550506005546040805163398b186960e21b815290516001926001600160a01b03169163e62c61a49160048083019260209291908290030181600087803b1580156110aa57600080fd5b505af11580156110be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e29190612b0b565b600181111561110157634e487b7160e01b600052602160045260246000fd5b14156111aa576005546040805163f8413b0760e01b8152815160009384936001600160a01b039091169263f8413b07926004808301939282900301818787803b15801561114d57600080fd5b505af1158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190612ae8565b6000918252600f602090815260408084208c9055601090915290912055506112d89050565b6005546040805163398b186960e21b815290516000926001600160a01b03169163e62c61a491600480830192602092919082900301818787803b1580156111f057600080fd5b505af1158015611204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112289190612b0b565b600181111561124757634e487b7160e01b600052602160045260246000fd5b14156112d8576005546112d89087906001600160a01b031663b37217a45a6040518263ffffffff1660e01b815260040161128391815260200190565b60206040518083038186803b15801561129b57600080fd5b505afa1580156112af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d39190612b2a565b61235d565b5050505b6009548160020154101561087657600081600201546009546112fe9190612e59565b9050600954826002018190555080600d600082825461131d9190612e0e565b909155505060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561136e57600080fd5b505af1158015611382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a69190612ab4565b5050505050565b6000546001600160a01b031633146113d75760405162461bcd60e51b815260040161079e90612d78565b6113e16000612654565b565b60048054604080516350d25bcd60e01b8152905160009384936001600160a01b0316926350d25bcd9281830192602092829003018186803b15801561142757600080fd5b505afa15801561143b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145f9190612b2a565b90508061147484670de0b6b3a7640000612e3a565b61147e9190612e26565b9392505050565b60005b81518160ff161015610ab5576114c7828260ff16815181106114ba57634e487b7160e01b600052603260045260246000fd5b60200260200101516114d9565b806114d181612ed9565b915050611488565b601154600160301b900460ff16156115035760405162461bcd60e51b815260040161079e90612d4f565b6001546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e9060240160206040518083038186803b15801561154757600080fd5b505afa15801561155b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157f9190612930565b6001600160a01b0316146115a55760405162461bcd60e51b815260040161079e90612d20565b60015460405163b82f74e160e01b8152600481018390526001600160a01b039091169063b82f74e19060240160206040518083038186803b1580156115e957600080fd5b505afa1580156115fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116219190612ab4565b1561166e5760405162461bcd60e51b815260206004820152601760248201527f596f752063616e206f6e6c79207374616b652068656e73000000000000000000604482015260640161079e565b60015460405163e985e9c560e01b81523360048201523060248201526001600160a01b039091169063e985e9c59060440160206040518083038186803b1580156116b757600080fd5b505afa1580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ef9190612ab4565b6116f857600080fd5b6040805160608101825242815233602080830182815260008486018181528782526007845286822086518155925160019384018054925161ffff16600160a01b026001600160b01b03199093166001600160a01b0392831617929092179091558482526008845286822080548085018255908352939091209092018690555493516323b872dd60e01b81526004810192909252306024830152604482018590529192909116906323b872dd90606401600060405180830381600087803b1580156117c157600080fd5b505af11580156117d5573d6000803e3d6000fd5b505050505050565b601154600160301b900460ff16156118075760405162461bcd60e51b815260040161079e90612d4f565b6000805b60ff81168411156118665761184885858360ff1681811061183c57634e487b7160e01b600052603260045260246000fd5b905060200201356126a4565b6118529083612e0e565b91508061185e81612ed9565b91505061180b565b5080156118fa5760025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156118b957600080fd5b505af11580156118cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f19190612ab4565b6118fa57600080fd5b81156119525760005b60ff81168411156113a65761194085858360ff1681811061193457634e487b7160e01b600052603260045260246000fd5b90506020020135612015565b8061194a81612ed9565b915050611903565b50505050565b6000818152600e60205260408120805482906119749042612e59565b9050600062015180821161198c57826001015461198f565b60005b9050600681815481106119b257634e487b7160e01b600052603260045260246000fd5b90600052602060002001549350505050919050565b6000818152600760205260408120805482906119e39042612e59565b90506119f26201518082612e26565b949350505050565b60606000611a1d836001600160a01b031660009081526008602052604090205490565b905060008167ffffffffffffffff811115611a4857634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611aa457816020015b611a916040518060800160405280600081526020016000815260200160008152602001606081525090565b815260200190600190039081611a665790505b50905060005b828161ffff161015611bee576000611ac6868361ffff16610ab9565b6000818152600760205260408120600181015492935091600160a01b900461ffff16611af184611d3e565b611afb9190612e59565b60015460405163c87b56dd60e01b8152600481018690529192506000916001600160a01b039091169063c87b56dd9060240160006040518083038186803b158015611b4557600080fd5b505afa158015611b59573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b819190810190612b42565b905060405180608001604052808581526020018460000154815260200183815260200182815250868661ffff1681518110611bcc57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505050508080611be690612e9c565b915050611aaa565b509392505050565b60068181548110611c0657600080fd5b600091825260209091200154905081565b601154600160301b900460ff1615611c415760405162461bcd60e51b815260040161079e90612d4f565b6000611c4c836126a4565b90508115611c5d57611c5d83612015565b80156108765760025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015611caf57600080fd5b505af1158015611cc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce79190612ab4565b61087657600080fd5b6000546001600160a01b03163314611d1a5760405162461bcd60e51b815260040161079e90612d78565b6011805466ff000000000000198116600160301b9182900460ff1615909102179055565b6001546040516331a9108f60e11b81526004810183905260009130916001600160a01b0390911690636352211e9060240160206040518083038186803b158015611d8757600080fd5b505afa158015611d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbf9190612930565b6001600160a01b031614611de55760405162461bcd60e51b815260040161079e90612dad565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015611e2957600080fd5b505afa158015611e3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e619190612b2a565b6000848152600760205260408120919250611e896201518069152d02c7e14af6800000612e26565b8254909150600090611e9b9042612e59565b90506000611eac6201518083612e26565b90506001811080611ebb575084155b15611ecd575060009695505050505050565b6000611eda600183612e59565b90506000611ee983600a612e3a565b600283611ef68180612e3a565b611f009190612e0e565b611f0a9190612e26565b611f149190612e0e565b905060008162015180611f278682612e3a565b611f319088612e59565b611f3b8786612e26565b611f459190612e3a565b611f4f9190612e26565b611f599190612e0e565b90506000611f678288612e3a565b9050888110611f765788611f78565b805b9b9a5050505050505050505050565b6000818152600f60209081526040808320805460109093528184208054918590559390935560055490516372bfca3760e11b815260048101859052602481018490529192916108769184916001600160a01b039091169063e57f946e90604401602060405180830381600087803b15801561200157600080fd5b505af11580156112af573d6000803e3d6000fd5b6001546040516331a9108f60e11b81526004810183905230916001600160a01b031690636352211e9060240160206040518083038186803b15801561205957600080fd5b505afa15801561206d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120919190612930565b6001600160a01b0316146120b75760405162461bcd60e51b815260040161079e90612dad565b600081815260076020526040902060018101546001600160a01b031633146120f15760405162461bcd60e51b815260040161079e90612d20565b336000908152600860205260408120905b815461ffff8216101561215c5783828261ffff168154811061213457634e487b7160e01b600052603260045260246000fd5b9060005260206000200154141561214a5761215c565b8061215481612e9c565b915050612102565b815461ffff8216106121a05760405162461bcd60e51b815260206004820152600d60248201526c12195b881b9bdd08199bdd5b99609a1b604482015260640161079e565b815482906121b090600190612e59565b815481106121ce57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154828261ffff16815481106121fd57634e487b7160e01b600052603260045260246000fd5b90600052602060002001819055508180548061222957634e487b7160e01b600052603160045260246000fd5b600082815260208120600019908301810191909155019055600183810180546001600160a01b0319169055546040516323b872dd60e01b8152306004820152336024820152604481018690526001600160a01b03909116906323b872dd90606401600060405180830381600087803b1580156122a457600080fd5b505af11580156122b8573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146122ec5760405162461bcd60e51b815260040161079e90612d78565b6001600160a01b0381166123515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161079e565b61235a81612654565b50565b6001546040516331a9108f60e11b8152600481018490526000916001600160a01b031690636352211e9060240160206040518083038186803b1580156123a257600080fd5b505afa1580156123b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123da9190612930565b90506001600160a01b0381166123ef57600080fd5b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561243357600080fd5b505afa158015612447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061246b9190612b2a565b6124759084612ef9565b600154604051632f745c5960e01b8152306004820152602481018390529192506000916001600160a01b0390911690632f745c599060440160206040518083038186803b1580156124c557600080fd5b505afa1580156124d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124fd9190612b2a565b6000818152600760205260408120600181015492935091600160a01b900461ffff1661252884611d3e565b6125329190612e59565b60115490915060009060649061255390849062010000900461ffff16612e3a565b61255d9190612e26565b905080156126045780600b60008282546125779190612e0e565b909155505060025460405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b1580156125ca57600080fd5b505af11580156125de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126029190612ab4565b505b604080518581526020810183905289916001600160a01b038916917f442b8ff07e6b8e8008ebf53c4ce979a8ef762045727b158333bfe674b7a54f6c910160405180910390a35050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546040516331a9108f60e11b81526004810183905260009130916001600160a01b0390911690636352211e9060240160206040518083038186803b1580156126ed57600080fd5b505afa158015612701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127259190612930565b6001600160a01b03161461274b5760405162461bcd60e51b815260040161079e90612dad565b600082815260076020526040902060018101546001600160a01b031633146127855760405162461bcd60e51b815260040161079e90612d20565b600061279084611d3e565b6001830154909150600160a01b900461ffff168110156127f25760405162461bcd60e51b815260206004820181905260248201527f596f752068617665206e6f207265776172647320617420746869732074696d65604482015260640161079e565b600182015461280c90600160a01b900461ffff1682612e59565b90506000600a54600014806128375750601154640100000000900461ffff16612834866119c7565b10155b61285f5760115460649061285090849061ffff16612e3a565b61285a9190612e26565b612862565b60005b905060006128708284612e59565b90506000600a541180156128845750600082115b156128ad57600a546128969083612e26565b600960008282546128a79190612e0e565b90915550505b60018401805461ffff60a01b191690554290935550909392505050565b60008083601f8401126128db578182fd5b50813567ffffffffffffffff8111156128f2578182fd5b6020830191508360208260051b850101111561290d57600080fd5b9250929050565b600060208284031215612925578081fd5b813561147e81612f4f565b600060208284031215612941578081fd5b815161147e81612f4f565b6000806040838503121561295e578081fd5b823561296981612f4f565b946020939093013593505050565b60008060208385031215612989578182fd5b823567ffffffffffffffff81111561299f578283fd5b6129ab858286016128ca565b90969095509350505050565b6000806000604084860312156129cb578081fd5b833567ffffffffffffffff8111156129e1578182fd5b6129ed868287016128ca565b9094509250506020840135612a0181612f64565b809150509250925092565b60006020808385031215612a1e578182fd5b823567ffffffffffffffff80821115612a35578384fd5b818501915085601f830112612a48578384fd5b813581811115612a5a57612a5a612f39565b8060051b9150612a6b848301612ddd565b8181528481019084860184860187018a1015612a85578788fd5b8795505b83861015612aa7578035835260019590950194918601918601612a89565b5098975050505050505050565b600060208284031215612ac5578081fd5b815161147e81612f64565b600060208284031215612ae1578081fd5b5035919050565b60008060408385031215612afa578182fd5b505080516020909101519092909150565b600060208284031215612b1c578081fd5b81516002811061147e578182fd5b600060208284031215612b3b578081fd5b5051919050565b600060208284031215612b53578081fd5b815167ffffffffffffffff80821115612b6a578283fd5b818401915084601f830112612b7d578283fd5b815181811115612b8f57612b8f612f39565b612ba2601f8201601f1916602001612ddd565b9150808252856020828501011115612bb8578384fd5b612bc9816020840160208601612e70565b50949350505050565b60008060408385031215612be4578182fd5b823591506020830135612bf681612f64565b809150509250929050565b60008060408385031215612c13578182fd5b823560ff81168114612969578283fd5b60006020808301818452808551808352604092508286019150828160051b870101848801865b83811015612cb957888303603f1901855281518051845287810151888501528681015187850152606090810151608091850182905280519185018290529060a090612c9981838801858d01612e70565b96890196601f01601f191694909401909301925090860190600101612c49565b509098975050505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612d135781518051855286810151878601528501518585015260609093019290850190600101612ce4565b5091979650505050505050565b6020808252601590820152742cb7ba9036bab9ba1037bbb7103a3430ba103432b760591b604082015260600190565b6020808252600f908201526e10dbdb9d1c9858dd081c185d5cd959608a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260169082015275151a19481a195b881b5d5cdd081899481cdd185ad95960521b604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715612e0657612e06612f39565b604052919050565b60008219821115612e2157612e21612f0d565b500190565b600082612e3557612e35612f23565b500490565b6000816000190483118215151615612e5457612e54612f0d565b500290565b600082821015612e6b57612e6b612f0d565b500390565b60005b83811015612e8b578181015183820152602001612e73565b838111156119525750506000910152565b600061ffff80831681811415612eb457612eb4612f0d565b6001019392505050565b6000600019821415612ed257612ed2612f0d565b5060010190565b600060ff821660ff811415612ef057612ef0612f0d565b60010192915050565b600082612f0857612f08612f23565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461235a57600080fd5b801515811461235a57600080fdfea2646970667358221220918ca044c4e0b2a11d78950924163dd772057fd402901f9cdf3bdde2df639de564736f6c63430008040033";

export class HenHouse__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _fh: string,
    _eggs: string,
    _ethFeed: string,
    _weth: string,
    _randomUtils: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HenHouse> {
    return super.deploy(
      _fh,
      _eggs,
      _ethFeed,
      _weth,
      _randomUtils,
      overrides || {}
    ) as Promise<HenHouse>;
  }
  getDeployTransaction(
    _fh: string,
    _eggs: string,
    _ethFeed: string,
    _weth: string,
    _randomUtils: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _fh,
      _eggs,
      _ethFeed,
      _weth,
      _randomUtils,
      overrides || {}
    );
  }
  attach(address: string): HenHouse {
    return super.attach(address) as HenHouse;
  }
  connect(signer: Signer): HenHouse__factory {
    return super.connect(signer) as HenHouse__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HenHouseInterface {
    return new utils.Interface(_abi) as HenHouseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HenHouse {
    return new Contract(address, _abi, signerOrProvider) as HenHouse;
  }
}
