/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HenHouse, HenHouseInterface } from "../HenHouse";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fh",
        type: "address",
      },
      {
        internalType: "address",
        name: "_eggs",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_randomUtils",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "fox",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hen",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Heist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ETHPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "allStakingsOfOwner",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct HenHouse.CurrentValue[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "foxIds",
        type: "uint256[]",
      },
    ],
    name: "batchFoxInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dailyCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "foxValue",
            type: "uint256",
          },
        ],
        internalType: "struct HenHouse.Fox[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unstake",
        type: "bool",
      },
    ],
    name: "claimHenRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "claimingFoxes",
        type: "uint256[]",
      },
    ],
    name: "claimManyFoxesRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "hens",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "unstake",
        type: "bool",
      },
    ],
    name: "claimManyHenRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "daysStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eggsHeistedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foxCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foxValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "foxes",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dailyCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "foxValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "fulfillRandomnessFromOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "enterHenHouse",
        type: "bool",
      },
    ],
    name: "heist",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "heistAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "heistCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "heistPercentage",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "heistPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "henIds",
        type: "uint256[]",
      },
    ],
    name: "multiStakeHen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomUtils",
    outputs: [
      {
        internalType: "contract IRandomUtils",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ethFeed",
        type: "address",
      },
    ],
    name: "setEthFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setHeistPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomUtils",
        type: "address",
      },
    ],
    name: "setRandomUtils",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "stakeHen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakings",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "stolen",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakingsByOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxFreeDays",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxPercentage",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "togglePause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTaxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unstakeHen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610120604052631dcd65006080908152633b9aca0060a052637735940060c05263ee6b280060e0526401dcd65000610100526200004190600690600562000147565b506011805465ffffffffffff19166403001e000f1790553480156200006557600080fd5b506040516200328d3803806200328d8339810160408190526200008891620001d4565b6200009333620000f7565b600180546001600160a01b03199081166001600160a01b039788161790915560028054821695871695909517909455600380548516928616929092179091556004805484169285169290921790915560058054909216921691909117905562000243565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200018e579160200282015b828111156200018e578251829064ffffffffff1690559160200191906001019062000168565b506200019c929150620001a0565b5090565b5b808211156200019c5760008155600101620001a1565b80516001600160a01b0381168114620001cf57600080fd5b919050565b600080600080600060a08688031215620001ec578081fd5b620001f786620001b7565b94506200020760208701620001b7565b93506200021760408701620001b7565b92506200022760608701620001b7565b91506200023760808701620001b7565b90509295509295909350565b61303a80620002536000396000f3fe6080604052600436106102255760003560e01c80637decd3d811610123578063c298b1ad116100ab578063d7384d831161006f578063d7384d8314610713578063d7920cb114610729578063dfb1e43d14610749578063ef4579501461075f578063f2fde38b1461077f57600080fd5b8063c298b1ad1461062c578063c4ae31681461064c578063c4f0c1fc14610661578063c5994afb146106d2578063d2d7231f146106f357600080fd5b806392e47417116100f257806392e4741714610584578063943fb1a4146105a4578063a67cb62c146105d1578063a77edd5e146105f1578063ae7b6d161461061157600080fd5b80637decd3d8146104fa5780638a861b24146105105780638b50db25146105305780638da5cb5b1461056657600080fd5b80635c975abb116101b1578063746a88f911610175578063746a88f91461046457806374e673c0146104845780637acc9e29146104a45780637ca1682d146104c45780637d9dfe94146104da57600080fd5b80635c975abb1461039d57806363caf953146103ce57806370a08231146103e1578063715018a6146104175780637349790b1461042c57600080fd5b80632d03b7f8116101f85780632d03b7f8146102f95780632e1a7d4d146103195780632f745c59146103395780633ab952a6146103675780635420b4b11461038757600080fd5b80631e0b09591461022a5780632390f2581461024c578063253ac9861461026c5780632748fec8146102a2575b600080fd5b34801561023657600080fd5b5061024a610245366004612c93565b61079f565b005b34801561025857600080fd5b5061024a610267366004612a09565b61084d565b34801561027857600080fd5b5061028c610287366004612a9e565b6108a6565b6040516102999190612d59565b60405180910390f35b3480156102ae57600080fd5b506102de6102bd366004612b62565b600e6020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610299565b34801561030557600080fd5b5061024a6103143660046129a6565b6109ea565b34801561032557600080fd5b5061024a610334366004612b62565b610a7d565b34801561034557600080fd5b506103596103543660046129de565b610ae4565b604051908152602001610299565b34801561037357600080fd5b506103596103823660046129de565b610b2f565b34801561039357600080fd5b50610359600d5481565b3480156103a957600080fd5b506011546103be90600160301b900460ff1681565b6040519015158152602001610299565b61024a6103dc366004612c64565b610b60565b3480156103ed57600080fd5b506103596103fc3660046129a6565b6001600160a01b031660009081526008602052604090205490565b34801561042357600080fd5b5061024a6113d5565b34801561043857600080fd5b5060055461044c906001600160a01b031681565b6040516001600160a01b039091168152602001610299565b34801561047057600080fd5b5061035961047f366004612b62565b61140b565b34801561049057600080fd5b5061024a61049f366004612a9e565b6114ad565b3480156104b057600080fd5b5061024a6104bf366004612b62565b611501565b3480156104d057600080fd5b50610359600c5481565b3480156104e657600080fd5b5061024a6104f5366004612a49565b611805565b34801561050657600080fd5b50610359600a5481565b34801561051c57600080fd5b5061035961052b366004612b62565b611980565b34801561053c57600080fd5b5060115461055390640100000000900461ffff1681565b60405161ffff9091168152602001610299565b34801561057257600080fd5b506000546001600160a01b031661044c565b34801561059057600080fd5b5061035961059f366004612b62565b6119ef565b3480156105b057600080fd5b506105c46105bf3660046129a6565b611a22565b6040516102999190612cb5565b3480156105dd57600080fd5b506103596105ec366004612b62565b611c1e565b3480156105fd57600080fd5b5061024a61060c366004612c64565b611c3f565b34801561061d57600080fd5b506011546105539061ffff1681565b34801561063857600080fd5b5061024a6106473660046129a6565b611d18565b34801561065857600080fd5b5061024a611dab565b34801561066d57600080fd5b506106ab61067c366004612b62565b600760205260009081526040902080546001909101546001600160a01b03811690600160a01b900461ffff1683565b604080519384526001600160a01b03909216602084015261ffff1690820152606001610299565b3480156106de57600080fd5b506011546105539062010000900461ffff1681565b3480156106ff57600080fd5b5061035961070e366004612b62565b611df9565b34801561071f57600080fd5b5061035960095481565b34801561073557600080fd5b5061024a610744366004612b62565b612042565b34801561075557600080fd5b50610359600b5481565b34801561076b57600080fd5b5061024a61077a366004612b62565b6120a7565b34801561078b57600080fd5b5061024a61079a3660046129a6565b612354565b6000546001600160a01b031633146107d25760405162461bcd60e51b81526004016107c990612e0a565b60405180910390fd5b60065460ff8316106108185760405162461bcd60e51b815260206004820152600f60248201526e092dcc6dee4e4cac6e840d2dcc8caf608b1b60448201526064016107c9565b8060068360ff168154811061083d57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001555050565b60005b60ff81168211156108a15761088f83838360ff1681811061088157634e487b7160e01b600052603260045260246000fd5b905060200201356000610b60565b8061089981612f6b565b915050610850565b505050565b60606000825167ffffffffffffffff8111156108d257634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561092757816020015b61091460405180606001604052806000815260200160008152602001600081525090565b8152602001906001900390816108f05790505b50905060005b83518161ffff1610156109e357600e6000858361ffff168151811061096257634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050828261ffff16815181106109c557634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806109db90612f2e565b91505061092d565b5092915050565b6000546001600160a01b03163314610a145760405162461bcd60e51b81526004016107c990612e0a565b6001600160a01b038116610a5b5760405162461bcd60e51b815260206004820152600e60248201526d43616e6e6f74206265207a65726f60901b60448201526064016107c9565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610aa75760405162461bcd60e51b81526004016107c990612e0a565b600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610ae0573d6000803e3d6000fd5b5050565b6001600160a01b0382166000908152600860205260408120805483908110610b1c57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60086020528160005260406000208181548110610b4b57600080fd5b90600052602060002001600091509150505481565b333214610b9a5760405162461bcd60e51b81526020600482015260086024820152674f6e6c7920454f4160c01b60448201526064016107c9565b601154600160301b900460ff1615610bc45760405162461bcd60e51b81526004016107c990612de1565b6001546040516331a9108f60e11b81526004810184905233916001600160a01b031690636352211e9060240160206040518083038186803b158015610c0857600080fd5b505afa158015610c1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4091906129c2565b6001600160a01b0316148015610ccd575060015460405163b82f74e160e01b8152600481018490526001600160a01b039091169063b82f74e19060240160206040518083038186803b158015610c9557600080fd5b505afa158015610ca9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccd9190612b46565b610d115760405162461bcd60e51b81526020600482015260156024820152740b2deea40daeae6e840deeedc40e8d0c2e840ccdef605b1b60448201526064016107c9565b6000828152600e602052604090208054610d46574281556009546002820155600a8054906000610d4083612f50565b91905055505b811561130457600654600182015410610db45760405162461bcd60e51b815260206004820152602a60248201527f596f752063616e2068656973742061206d6178696d756d206f6620352074696d6044820152696573207065722064617960b01b60648201526084016107c9565b6000610dbf84611980565b90506000610dcc8261140b565b90503415610e385780341015610e335760405162461bcd60e51b815260206004820152602660248201527f596f75206d757374207061792074686520636f727265637420616d6f756e74206044820152650decc408aa8960d31b60648201526084016107c9565b611037565b600354604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e9060440160206040518083038186803b158015610e8257600080fd5b505afa158015610e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eba9190612bbc565b6003546040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3b9190612bbc565b9050828210158015610f4d5750828110155b610fa95760405162461bcd60e51b815260206004820152602760248201527f596f75206d757374207061792074686520636f727265637420616d6f756e74206044820152660decc40ae8aa8960cb1b60648201526084016107c9565b6003546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610ffb57600080fd5b505af115801561100f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110339190612b46565b5050505b82546000906110469042612eeb565b90506201518081111561106157428455600180850155611079565b60018401805490600061107383612f50565b91905055505b600c805490600061108983612f50565b90915550506005546040805163398b186960e21b815290516001926001600160a01b03169163e62c61a4916004808301926020929190829003018186803b1580156110d357600080fd5b505afa1580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b9190612b9d565b600181111561112a57634e487b7160e01b600052602160045260246000fd5b14156111d3576005546040805163f8413b0760e01b8152815160009384936001600160a01b039091169263f8413b07926004808301939282900301818787803b15801561117657600080fd5b505af115801561118a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ae9190612b7a565b6000918252600f602090815260408084208c9055601090915290912055506113009050565b6005546040805163398b186960e21b815290516000926001600160a01b03169163e62c61a4916004808301926020929190829003018186803b15801561121857600080fd5b505afa15801561122c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112509190612b9d565b600181111561126f57634e487b7160e01b600052602160045260246000fd5b1415611300576005546113009087906001600160a01b031663b37217a45a6040518263ffffffff1660e01b81526004016112ab91815260200190565b60206040518083038186803b1580156112c357600080fd5b505afa1580156112d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fb9190612bbc565b6123ef565b5050505b600954816002015410156108a157600081600201546009546113269190612eeb565b9050600954826002018190555080600d60008282546113459190612ea0565b909155505060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561139657600080fd5b505af11580156113aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ce9190612b46565b5050505050565b6000546001600160a01b031633146113ff5760405162461bcd60e51b81526004016107c990612e0a565b61140960006126e6565b565b60048054604080516350d25bcd60e01b8152905160009384936001600160a01b0316926350d25bcd9281830192602092829003018186803b15801561144f57600080fd5b505afa158015611463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114879190612bbc565b90508061149c84670de0b6b3a7640000612ecc565b6114a69190612eb8565b9392505050565b60005b81518160ff161015610ae0576114ef828260ff16815181106114e257634e487b7160e01b600052603260045260246000fd5b6020026020010151611501565b806114f981612f6b565b9150506114b0565b601154600160301b900460ff161561152b5760405162461bcd60e51b81526004016107c990612de1565b6001546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e9060240160206040518083038186803b15801561156f57600080fd5b505afa158015611583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a791906129c2565b6001600160a01b0316146115cd5760405162461bcd60e51b81526004016107c990612db2565b60015460405163b82f74e160e01b8152600481018390526001600160a01b039091169063b82f74e19060240160206040518083038186803b15801561161157600080fd5b505afa158015611625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116499190612b46565b156116965760405162461bcd60e51b815260206004820152601760248201527f596f752063616e206f6e6c79207374616b652068656e7300000000000000000060448201526064016107c9565b60015460405163e985e9c560e01b81523360048201523060248201526001600160a01b039091169063e985e9c59060440160206040518083038186803b1580156116df57600080fd5b505afa1580156116f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117179190612b46565b61172057600080fd5b6040805160608101825242815233602080830182815260008486018181528782526007845286822086518155925160019384018054925161ffff16600160a01b026001600160b01b03199093166001600160a01b0392831617929092179091558482526008845286822080548085018255908352939091209092018690555493516323b872dd60e01b81526004810192909252306024830152604482018590529192909116906323b872dd90606401600060405180830381600087803b1580156117e957600080fd5b505af11580156117fd573d6000803e3d6000fd5b505050505050565b601154600160301b900460ff161561182f5760405162461bcd60e51b81526004016107c990612de1565b6000805b60ff811684111561188e5761187085858360ff1681811061186457634e487b7160e01b600052603260045260246000fd5b90506020020135612736565b61187a9083612ea0565b91508061188681612f6b565b915050611833565b5080156119225760025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156118e157600080fd5b505af11580156118f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119199190612b46565b61192257600080fd5b811561197a5760005b60ff81168411156113ce5761196885858360ff1681811061195c57634e487b7160e01b600052603260045260246000fd5b905060200201356120a7565b8061197281612f6b565b91505061192b565b50505050565b6000818152600e602052604081208054829061199c9042612eeb565b905060006201518082116119b45782600101546119b7565b60005b9050600681815481106119da57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549350505050919050565b600081815260076020526040812080548290611a0b9042612eeb565b9050611a1a6201518082612eb8565b949350505050565b60606000611a45836001600160a01b031660009081526008602052604090205490565b905060008167ffffffffffffffff811115611a7057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611acc57816020015b611ab96040518060800160405280600081526020016000815260200160008152602001606081525090565b815260200190600190039081611a8e5790505b50905060005b828161ffff161015611c16576000611aee868361ffff16610ae4565b6000818152600760205260408120600181015492935091600160a01b900461ffff16611b1984611df9565b611b239190612eeb565b60015460405163c87b56dd60e01b8152600481018690529192506000916001600160a01b039091169063c87b56dd9060240160006040518083038186803b158015611b6d57600080fd5b505afa158015611b81573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ba99190810190612bd4565b905060405180608001604052808581526020018460000154815260200183815260200182815250868661ffff1681518110611bf457634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505050508080611c0e90612f2e565b915050611ad2565b509392505050565b60068181548110611c2e57600080fd5b600091825260209091200154905081565b601154600160301b900460ff1615611c695760405162461bcd60e51b81526004016107c990612de1565b6000611c7483612736565b90508115611c8557611c85836120a7565b80156108a15760025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015611cd757600080fd5b505af1158015611ceb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0f9190612b46565b6108a157600080fd5b6000546001600160a01b03163314611d425760405162461bcd60e51b81526004016107c990612e0a565b6001600160a01b038116611d895760405162461bcd60e51b815260206004820152600e60248201526d43616e6e6f74206265207a65726f60901b60448201526064016107c9565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611dd55760405162461bcd60e51b81526004016107c990612e0a565b6011805466ff000000000000198116600160301b9182900460ff1615909102179055565b6001546040516331a9108f60e11b81526004810183905260009130916001600160a01b0390911690636352211e9060240160206040518083038186803b158015611e4257600080fd5b505afa158015611e56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7a91906129c2565b6001600160a01b031614611ea05760405162461bcd60e51b81526004016107c990612e3f565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015611ee457600080fd5b505afa158015611ef8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1c9190612bbc565b6000848152600760205260408120919250611f446201518069152d02c7e14af6800000612eb8565b8254909150600090611f569042612eeb565b90506000611f676201518083612eb8565b90506001811080611f76575084155b15611f88575060009695505050505050565b6000611f95600183612eeb565b90506000611fa483600a612ecc565b600283611fb18180612ecc565b611fbb9190612ea0565b611fc59190612eb8565b611fcf9190612ea0565b905060008162015180611fe28682612ecc565b611fec9088612eeb565b611ff68786612eb8565b6120009190612ecc565b61200a9190612eb8565b6120149190612ea0565b905060006120228288612ecc565b90508881106120315788612033565b805b9b9a5050505050505050505050565b6000818152600f60209081526040808320805460109093528184208054918590559390935560055490516372bfca3760e11b815260048101859052602481018490529192916108a19184916001600160a01b039091169063e57f946e906044016112ab565b6001546040516331a9108f60e11b81526004810183905230916001600160a01b031690636352211e9060240160206040518083038186803b1580156120eb57600080fd5b505afa1580156120ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212391906129c2565b6001600160a01b0316146121495760405162461bcd60e51b81526004016107c990612e3f565b600081815260076020526040902060018101546001600160a01b031633146121835760405162461bcd60e51b81526004016107c990612db2565b336000908152600860205260408120905b815461ffff821610156121ee5783828261ffff16815481106121c657634e487b7160e01b600052603260045260246000fd5b906000526020600020015414156121dc576121ee565b806121e681612f2e565b915050612194565b815461ffff8216106122325760405162461bcd60e51b815260206004820152600d60248201526c12195b881b9bdd08199bdd5b99609a1b60448201526064016107c9565b8154829061224290600190612eeb565b8154811061226057634e487b7160e01b600052603260045260246000fd5b9060005260206000200154828261ffff168154811061228f57634e487b7160e01b600052603260045260246000fd5b9060005260206000200181905550818054806122bb57634e487b7160e01b600052603160045260246000fd5b600082815260208120600019908301810191909155019055600183810180546001600160a01b0319169055546040516323b872dd60e01b8152306004820152336024820152604481018690526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561233657600080fd5b505af115801561234a573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b0316331461237e5760405162461bcd60e51b81526004016107c990612e0a565b6001600160a01b0381166123e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107c9565b6123ec816126e6565b50565b6001546040516331a9108f60e11b8152600481018490526000916001600160a01b031690636352211e9060240160206040518083038186803b15801561243457600080fd5b505afa158015612448573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061246c91906129c2565b90506001600160a01b03811661248157600080fd5b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156124c557600080fd5b505afa1580156124d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124fd9190612bbc565b6125079084612f8b565b600154604051632f745c5960e01b8152306004820152602481018390529192506000916001600160a01b0390911690632f745c599060440160206040518083038186803b15801561255757600080fd5b505afa15801561256b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258f9190612bbc565b6000818152600760205260408120600181015492935091600160a01b900461ffff166125ba84611df9565b6125c49190612eeb565b6011549091506000906064906125e590849062010000900461ffff16612ecc565b6125ef9190612eb8565b905080156126965780600b60008282546126099190612ea0565b909155505060025460405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561265c57600080fd5b505af1158015612670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126949190612b46565b505b604080518581526020810183905289916001600160a01b038916917f442b8ff07e6b8e8008ebf53c4ce979a8ef762045727b158333bfe674b7a54f6c910160405180910390a35050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546040516331a9108f60e11b81526004810183905260009130916001600160a01b0390911690636352211e9060240160206040518083038186803b15801561277f57600080fd5b505afa158015612793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b791906129c2565b6001600160a01b0316146127dd5760405162461bcd60e51b81526004016107c990612e3f565b600082815260076020526040902060018101546001600160a01b031633146128175760405162461bcd60e51b81526004016107c990612db2565b600061282284611df9565b6001830154909150600160a01b900461ffff168110156128845760405162461bcd60e51b815260206004820181905260248201527f596f752068617665206e6f207265776172647320617420746869732074696d6560448201526064016107c9565b600182015461289e90600160a01b900461ffff1682612eeb565b90506000600a54600014806128c95750601154640100000000900461ffff166128c6866119ef565b10155b6128f1576011546064906128e290849061ffff16612ecc565b6128ec9190612eb8565b6128f4565b60005b905060006129028284612eeb565b90506000600a541180156129165750600082115b1561293f57600a546129289083612eb8565b600960008282546129399190612ea0565b90915550505b60018401805461ffff60a01b191690554290935550909392505050565b60008083601f84011261296d578182fd5b50813567ffffffffffffffff811115612984578182fd5b6020830191508360208260051b850101111561299f57600080fd5b9250929050565b6000602082840312156129b7578081fd5b81356114a681612fe1565b6000602082840312156129d3578081fd5b81516114a681612fe1565b600080604083850312156129f0578081fd5b82356129fb81612fe1565b946020939093013593505050565b60008060208385031215612a1b578182fd5b823567ffffffffffffffff811115612a31578283fd5b612a3d8582860161295c565b90969095509350505050565b600080600060408486031215612a5d578081fd5b833567ffffffffffffffff811115612a73578182fd5b612a7f8682870161295c565b9094509250506020840135612a9381612ff6565b809150509250925092565b60006020808385031215612ab0578182fd5b823567ffffffffffffffff80821115612ac7578384fd5b818501915085601f830112612ada578384fd5b813581811115612aec57612aec612fcb565b8060051b9150612afd848301612e6f565b8181528481019084860184860187018a1015612b17578788fd5b8795505b83861015612b39578035835260019590950194918601918601612b1b565b5098975050505050505050565b600060208284031215612b57578081fd5b81516114a681612ff6565b600060208284031215612b73578081fd5b5035919050565b60008060408385031215612b8c578182fd5b505080516020909101519092909150565b600060208284031215612bae578081fd5b8151600281106114a6578182fd5b600060208284031215612bcd578081fd5b5051919050565b600060208284031215612be5578081fd5b815167ffffffffffffffff80821115612bfc578283fd5b818401915084601f830112612c0f578283fd5b815181811115612c2157612c21612fcb565b612c34601f8201601f1916602001612e6f565b9150808252856020828501011115612c4a578384fd5b612c5b816020840160208601612f02565b50949350505050565b60008060408385031215612c76578182fd5b823591506020830135612c8881612ff6565b809150509250929050565b60008060408385031215612ca5578182fd5b823560ff811681146129fb578283fd5b60006020808301818452808551808352604092508286019150828160051b870101848801865b83811015612d4b57888303603f1901855281518051845287810151888501528681015187850152606090810151608091850182905280519185018290529060a090612d2b81838801858d01612f02565b96890196601f01601f191694909401909301925090860190600101612cdb565b509098975050505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612da55781518051855286810151878601528501518585015260609093019290850190600101612d76565b5091979650505050505050565b6020808252601590820152742cb7ba9036bab9ba1037bbb7103a3430ba103432b760591b604082015260600190565b6020808252600f908201526e10dbdb9d1c9858dd081c185d5cd959608a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260169082015275151a19481a195b881b5d5cdd081899481cdd185ad95960521b604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715612e9857612e98612fcb565b604052919050565b60008219821115612eb357612eb3612f9f565b500190565b600082612ec757612ec7612fb5565b500490565b6000816000190483118215151615612ee657612ee6612f9f565b500290565b600082821015612efd57612efd612f9f565b500390565b60005b83811015612f1d578181015183820152602001612f05565b8381111561197a5750506000910152565b600061ffff80831681811415612f4657612f46612f9f565b6001019392505050565b6000600019821415612f6457612f64612f9f565b5060010190565b600060ff821660ff811415612f8257612f82612f9f565b60010192915050565b600082612f9a57612f9a612fb5565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146123ec57600080fd5b80151581146123ec57600080fdfea2646970667358221220d104e81a2b2d10a6b0338b2470604f677aee80f1d0791029fba7234e8005714164736f6c63430008040033";

export class HenHouse__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _fh: string,
    _eggs: string,
    _ethFeed: string,
    _weth: string,
    _randomUtils: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HenHouse> {
    return super.deploy(
      _fh,
      _eggs,
      _ethFeed,
      _weth,
      _randomUtils,
      overrides || {}
    ) as Promise<HenHouse>;
  }
  getDeployTransaction(
    _fh: string,
    _eggs: string,
    _ethFeed: string,
    _weth: string,
    _randomUtils: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _fh,
      _eggs,
      _ethFeed,
      _weth,
      _randomUtils,
      overrides || {}
    );
  }
  attach(address: string): HenHouse {
    return super.attach(address) as HenHouse;
  }
  connect(signer: Signer): HenHouse__factory {
    return super.connect(signer) as HenHouse__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HenHouseInterface {
    return new utils.Interface(_abi) as HenHouseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HenHouse {
    return new Contract(address, _abi, signerOrProvider) as HenHouse;
  }
}
